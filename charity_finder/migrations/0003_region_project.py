# Generated by Django 4.1.3 on 2022-12-09 06:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("charity_finder", "0002_country_organization"),
    ]

    operations = [
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
            ],
            options={
                "verbose_name_plural": "regions",
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200, null=True)),
                ("summary", models.TextField(blank=True, default="", null=True)),
                ("project_id", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "project_link",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("active", models.BooleanField(blank=True, null=True)),
                ("status", models.CharField(blank=True, max_length=200, null=True)),
                ("activities", models.TextField(blank=True, default="", null=True)),
                ("approved_date", models.DateTimeField(blank=True, null=True)),
                (
                    "contact_address_1",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "contact_address_2",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "contact_city",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "contact_country",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "contact_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "contact_title",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "contact_postal",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "contact_state",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "contact_url",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "country_home",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "country_home_code",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("date_report", models.DateTimeField(blank=True, null=True)),
                (
                    "donation_options",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                ("funding", models.DecimalField(decimal_places=2, max_digits=5)),
                ("goal", models.DecimalField(decimal_places=2, max_digits=5)),
                ("goal_remaining", models.DecimalField(decimal_places=2, max_digits=5)),
                ("image", models.JSONField(blank=True, default=dict, null=True)),
                ("long_term_impact", models.BooleanField(blank=True, null=True)),
                ("need", models.BooleanField(blank=True, null=True)),
                ("modified_date", models.DateTimeField(blank=True, null=True)),
                (
                    "number_donations",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                (
                    "number_reports",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                (
                    "progress_report_link",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("theme_name", models.CharField(blank=True, max_length=200, null=True)),
                ("videos", models.JSONField(blank=True, default=dict, null=True)),
                ("latitude", models.DecimalField(decimal_places=2, max_digits=5)),
                ("longitude", models.DecimalField(decimal_places=2, max_digits=5)),
                ("notice", models.TextField(blank=True, default="", null=True)),
                (
                    "countries",
                    models.ManyToManyField(
                        blank=True,
                        related_name="project_countries",
                        to="charity_finder.country",
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="charity_finder.organization",
                    ),
                ),
                (
                    "region",
                    models.ManyToManyField(
                        blank=True, related_name="regions", to="charity_finder.region"
                    ),
                ),
                (
                    "themes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="project_themes",
                        to="charity_finder.theme",
                    ),
                ),
            ],
        ),
    ]
